C Program to Implement Non-Preemptive SJF:

#include<stdio.h>
int main(){
int bt[10]={0},at[10]={0},tat[10]={0},wt[10]={0},p[10]={0};
int i,j, n,sum=0,total=0,pos,temp;
float avg_tat=0,avg_wt=0;
printf("Enter number of processes:");
scanf("%d",&n);
printf("Enter Arrival Time of process:\n");
for(i=0;i<n;i++)
{
printf("p%d:",i+1);
scanf("%d",&at[i]);
p[i]=i+1;

}

printf("\nEnter Burst Time of process:\n");

for(i=0;i<n;i++)
{
printf("p%d:",i+1);
scanf("%d",&bt[i]);
p[i]=i+1;
}

for(i=0;i<n;i++)
{
pos=i;
for(j=i+1;j<n;j++)
{
if(bt[j]<bt[pos])
pos=j;
}

temp=bt[i];
bt[i]=bt[pos];
bt[pos]=temp;

temp=p[i];
p[i]=p[pos];
p[pos]=temp;
}

wt[0]=0;

for(i=1;i<n;i++)

{
wt[i]=0;
for(j=0;j<i;j++)
wt[i]+=bt[j];

total+=wt[i];
}

avg_wt=(float)total/n;
total=0;

printf("\n\tProcess\t \tBurst Time\t \tWaiting Time\t \tTurnaround Time\t");
for(i=0;i<n;i++)
{
tat[i]=bt[i]+wt[i];
total+=tat[i];
printf("\n\tP%d\t\t%d\t\t%d\t\t%d\t",p[i],bt[i],wt[i],tat[i]);
}

avg_tat=(float)total/n;
printf("\n\nAverage Waiting Time=%f",avg_wt);
printf("\n\nAverage Turnaround Time=%fn",avg_tat);
}
